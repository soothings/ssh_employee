<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" 
	xmlns:p="http://www.springframework.org/schema/p"
	xmlns:context="http://www.springframework.org/schema/context"
	xmlns:aop="http://www.springframework.org/schema/aop"
	xmlns:tx="http://www.springframework.org/schema/tx"
	xsi:schemaLocation="http://www.springframework.org/schema/beans
    	 http://www.springframework.org/schema/beans/spring-beans.xsd
     	 http://www.springframework.org/schema/context
         http://www.springframework.org/schema/context/spring-context.xsd
         http://www.springframework.org/schema/aop
         http://www.springframework.org/schema/aop/spring-aop.xsd
         http://www.springframework.org/schema/tx
     	 http://www.springframework.org/schema/tx/spring-tx.xsd">
     
     
     
     
   <!--引入外部的属性文件  -->
   <context:property-placeholder location="classpath:jdbc.properties"/>
   
   <!-- 1) 连接池实例 -->
	<bean id="dataSource" class="com.mchange.v2.c3p0.ComboPooledDataSource">
		<property name="driverClass" value="${jdbc.driverClass}"></property>
		<property name="jdbcUrl" value="${jdbc.url}"></property>
		<property name="user" value="${jdbc.username}"></property>
		<property name="password" value="${jdbc.password}"></property>
		<property name="initialPoolSize" value="3"></property>
		<property name="maxPoolSize" value="6"></property>
	</bean>
   
   	<!-- 2) SessionFactory实例创建 -->
	<!-- 所有的配置都由spring维护(项目中不需要hibernate.cfg.xml) -->
	<bean id="sessionFactory" class="org.springframework.orm.hibernate3.LocalSessionFactoryBean">
		<!-- a. 连接池 -->
		<property name="dataSource" ref="dataSource"></property>
		
		<!-- b. hibernate常用配置： 方言、显示sql、自动建表等 -->
		<property name="hibernateProperties">
			<props>
				<prop key="hibernate.dialect">org.hibernate.dialect.MySQLDialect</prop>
				<prop key="hibernate.show_sql">true</prop>
				<prop key="hibernate.format_sql">true</prop>
				<prop key="hibernate.hbm2ddl.auto">update</prop>
			</props>
		</property>
		
		<!-- c. 映射配置 -->
		<property name="mappingLocations">
			<list>
				<value>classpath:cn/itcast/entity/*.hbm.xml</value>
			</list>
		</property>
	</bean>
	
	<!-- 配置Action的类 -->
	<bean id="employeeAction" class="cn.itcast.action.EmployeeAction" scope="prototype">
		<property name="employeeService" ref="employeeService"></property>
	</bean>
	<bean id="departmentAction" class="cn.itcast.action.DepartmentAction" scope="prototype">
		<property name="departmentService" ref="departmentService"></property>
	</bean>
	
	<!-- 配置业务层的类-->
	<bean id="employeeService" class="cn.itcast.service.impl.EmployeeServiceImpl">
		<property name="employeeDao" ref="employeeDao"></property>
	</bean>
	<bean id="departmentService" class="cn.itcast.service.impl.DepartmentServiceImpl">
		<property name="departmentDao" ref="departmentDao"></property>
	</bean>
	
	<!-- 配置DAO的类 -->
	<bean id="employeeDao" class="cn.itcast.dao.impl.EmployeeDaoImpl">
		<property name="sessionFactory" ref="sessionFactory"></property>
	</bean>
	<bean id="departmentDao" class="cn.itcast.dao.impl.DepartmentDaoImpl">
		<property name="sessionFactory" ref="sessionFactory"></property>
	</bean>
	
	
	
	
	
   
     <!-- 3) 事务配置 -->
	<!-- # 事务管理器 -->
	<bean id="txManager" class="org.springframework.orm.hibernate3.HibernateTransactionManager">
		<property name="sessionFactory" ref="sessionFactory"></property>
	</bean>
	<!-- # 开启注解事务 -->
	<tx:annotation-driven transaction-manager="txManager"></tx:annotation-driven>
   
   
   
   
   
   
   
   
   
   
   
   
	
</beans>   